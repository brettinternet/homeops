---
version: "3.7"

networks:
  traefik:
    # external:
    name: traefik
    attachable: true

services:
  traefik:
    image: traefik
    restart: unless-stopped
    networks:
      - traefik
    environment:
      TZ: ${TZ}
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${APPDATA_DIR}/traefik:/etc/traefik:rw
    ports:
      # - "8181:8080" # local access
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:80:80
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:443:443
    command:
      - "--logLevel=INFO"
      - "--api"
      - "--defaultentrypoints=http,https"
      - "--entrypoints=Name:http Address::80 Compress:true Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS Compress:true TLS.SniStrict:true TLS.MinVersion:VersionTLS12 CipherSuites:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
      - "--acme"
      - "--acme.storage=/etc/traefik/acme.json"
      - "--acme.entryPoint=https"
      - "--acme.dnsChallenge=true"
      - "--acme.dnsChallenge.provider=cloudflare"
      - "--acme.dnsChallenge.delayBeforeCheck=60"
      - "--acme.dnsChallenge.resolvers=1.1.1.1,1.0.0.1"
      - "--acme.onHostRule=true"
      - "--acme.email=${CLOUDFLARE_EMAIL}"
      - "--acme.acmeLogging=true"
      # - "--acme.domains=${ROOT_DOMAIN},*.${ROOT_DOMAIN},"
      - "--acme.domains=*.${ROOT_DOMAIN},"
      - "--acme.KeyType=RSA4096"
      - "--docker"
      - "--docker.domain=${ROOT_DOMAIN}"
      - "--docker.watch"
      - "--docker.exposedbydefault=false"
      - "--retry"
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: traefik
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: Host:traefik.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: traefik.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: true
      traefik.frontend.auth.basic.users: ${HTPASSWD}
      # traefik.frontend.auth.forward.address: http://oauth:4181
      # traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      # traefik.frontend.auth.forward.trustForwardHeader: true

  plex:
    image: plexinc/pms-docker
    container_name: plex
    restart: unless-stopped
    networks:
      - traefik
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM_CODE}
      - HOSTNAME=${PLEX_HOSTNAME}
      - ADVERTISE_IP=http://127.0.0.1:32400,https://plex.${ROOT_DOMAIN}:443
    volumes:
      - ${APPDATA_DIR}/plex:/config
      - ${SOTRAGE_DIR}/music:/data/Music
      - ${SOTRAGE_DIR}/movies:/data/Movies
      - ${SOTRAGE_DIR}/tv:/data/TV
      # - ${SOTRAGE_DIR}/tmp/transcode:/transcode
      - /tmp:/transcode
    ports:
      # Plex ports - source: https://www.techjunkie.com/what-port-does-plex-media-server-use-to-stream/
      - "${NETWORK_BIND_ADDR:-127.0.0.1}:32400:32400" # Plex Media Server
      - "3005:3005" # Plex Companion
      - "8324:8324" # Roku via Plex Companion
      - "32469:32649" # Plex DLNA Server
      - "1900:1900/udp" # Plex DLNA Server
      - "32410:32410/udp" # network discovery
      - "32412:32412/udp" # network discovery
      - "32413:32413/udp" # network discovery
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: plex
      traefik.protocol: http
      traefik.port: 32400
      traefik.frontend.rule: Host:plex.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: plex.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true

  # https://github.com/linuxserver/docker-ombi
  ombi:
    # https://hub.docker.com/r/linuxserver/ombi
    image: linuxserver/ombi
    container_name: ombi
    restart: unless-stopped
    networks:
      - traefik
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA_DIR}/ombi:/config
    ports:
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:3579:3579
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: ombi
      traefik.protocol: http
      traefik.port: 3579
      traefik.frontend.rule: Host:ombi.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: ombi.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true

  # https://github.com/linuxserver/docker-nzbget
  nzbget:
    # https://hub.docker.com/r/linuxserver/nzbget
    image: linuxserver/nzbget
    container_name: nzbget
    restart: unless-stopped
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA_DIR}/nzbget:/config
      - ${STORAGE_DIR}/downloads:/downloads
    ports:
      - 6788:6789
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: nzbget
      traefik.protocol: http
      traefik.port: 6788
      traefik.frontend.rule: Host:nzbget.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: nzbget.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true

  # https://github.com/linuxserver/docker-sonarr
  sonarr:
    # https://hub.docker.com/r/linuxserver/sonarr
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APPDATA_DIR}/sonarr:/config
      - ${STORAGE_DIR}/tv:/tv
      - ${STORAGE_DIR}/downloads/complete/tv:/downloads
    ports:
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:8989:8989
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: sonarr
      traefik.protocol: http
      traefik.port: 8989
      traefik.frontend.rule: Host:sonarr.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: sonarr.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true

  # https://github.com/linuxserver/docker-radarr
  radarr:
    # https://hub.docker.com/r/linuxserver/radarr
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APPDATA_DIR}/radarr:/config
      - ${STORAGE_DIR}/movies:/movies
      - ${STORAGE_DIR}/downloads/complete/movies:/downloads
    ports:
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:7878:7878
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: radarr
      traefik.protocol: http
      traefik.port: 7878
      traefik.frontend.rule: Host:radarr.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: radarr.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true

  # https://github.com/linuxserver/docker-code-server
  code-server:
    # https://hub.docker.com/r/linuxserver/code-server/
    image: linuxserver/code-server
    container_name: codeserver
    restart: unless-stopped
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - PASSWORD=${CODE_SERVER_PASSWORD} # optional
      - SUDO_PASSWORD=${CODE_SERVER_SUDO_PASSWORD} # optional
    volumes:
      - ${APPDATA_DIR}/codeserver:/config
    ports:
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:8444:8443
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: codeserver
      traefik.protocol: http
      traefik.port: 8444
      traefik.frontend.rule: Host:code.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: code.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true

  # https://github.com/portainer/portainer
  portainer:
    # https://hub.docker.com/r/portainer/portainer/
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    environment:
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPDATA_DIR}/portainer:/data
    ports:
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:9000:9000
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: portainer
      traefik.protocol: http
      traefik.port: 9000
      traefik.frontend.rule: Host:portainer.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: portainer.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true
      traefik.frontend.auth.basic.users: ${HTPASSWD}
      # traefik.frontend.auth.forward.address: http://oauth:4181

  # https://github.com/containrrr/watchtower
  watchtower:
    # https://hub.docker.com/r/containrrr/watchtower
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    # TODO: add notifications - https://containrrr.github.io/watchtower/notifications/
    environment:
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPDATA_DIR}/watchtower/config.json:/config.json
    command: --schedule "0 0 4 * * *" --cleanup
    # command: --interval 900 #15 minutes

  # https://github.com/linuxserver/docker-unifi-controller
  unifi:
    # https://hub.docker.com/r/linuxserver/unifi-controller
    image: linuxserver/unifi-controller
    container_name: unifi
    restart: unless-stopped
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      # - MEM_LIMIT=1024M #optional
    volumes:
      - ${APPDATA_DIR}/unifi:/config
    ports:
      - 3478:3478/udp # Unifi communication port
      - 10001:10001/udp # AP discovery
      - 8080:8080 # Unifi communication port
      - 8081:8081 # Unifi communication port
      - ${NETWORK_BIND_ADDR:-127.0.0.1}:8443:8443 # UI
      - 8843:8843 # Unifi communication port
      - 8880:8880 # Unifi communication port
      - 6789:6789 # For throughput test
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.backend: unifi
      traefik.protocol: http
      traefik.port: 8443
      traefik.frontend.rule: Host:unifi.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.SSLHost: unifi.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLForceHost: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true
      traefik.frontend.auth.basic.users: ${HTPASSWD}
      # traefik.frontend.auth.forward.address: http://oauth:4181
