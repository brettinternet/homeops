---
# With help from:
# https://github.com/githubixx/ansible-role-wireguard
# https://wiki.archlinux.org/index.php/WireGuard

- name: Check supported distribution
  fail:
    msg:
      - "Unsupported distribution: {{ ansible_facts['distribution'] | lower }}"
      - "Supported distributions are {{ supported_distributions }}"
  when: ansible_facts['distribution'] | lower not in supported_distributions

- name: Install WireGuard
  include_tasks: "install_{{ ansible_facts['distribution'] | lower }}.yml"

### System

- name: Enable WireGuard kernel module
  modprobe:
    name: wireguard
    state: present
  register: wireguard__kernel_module_enabled
  until: wireguard__kernel_module_enabled is succeeded
  retries: 10
  delay: 10
  failed_when: wireguard__kernel_module_enabled is failure

- name: Create WireGuard configuration directory
  file:
    dest: "{{ wireguard_remote_directory }}"
    state: directory
    mode: 0700

### Public / Private keys

- block:
    - name: Register if config already exists on target host
      stat:
        path: "{{ wireguard_remote_directory }}/{{ wireguard_interface }}.conf"
      register: wireguard__config_file

    - name: Get wg subcommands
      command: wg --help
      register: wireguard__subcommands_result
      changed_when: false
      check_mode: false

    - name: Check if wg syncconf subcommand is available
      set_fact:
        wg_syncconf: "{{ 'syncconf:' in wireguard__subcommands_result.stdout }}"

- name: Show syncconf subcommand status
  debug:
    var: wg_syncconf

- block:
    - name: Generate WireGuard private key
      command: wg genkey
      register: wireguard__private_key_result
      changed_when: false

    - name: Set private key fact
      set_fact:
        wireguard_private_key: "{{ wireguard__private_key_result.stdout }}"
  when:
    - not wireguard__config_file.stat.exists
    - wireguard_private_key is not defined

- block:
    - name: Read WireGuard config file
      slurp:
        src: "{{ wireguard_remote_directory }}/{{ wireguard_interface }}.conf"
      register: wireguard__config_slurp

    - name: Set private key fact
      set_fact:
        wireguard_private_key: "{{ wireguard__config_slurp['content'] | b64decode | regex_findall('PrivateKey = (.*)') | first }}"
  when:
    - wireguard__config_file.stat.exists
    - wireguard_private_key is not defined

- name: Derive WireGuard public key
  command: wg pubkey
  args:
    stdin: "{{ wireguard_private_key }}"
  register: wireguard__public_key_result
  changed_when: false
  check_mode: false

- name: Set public key fact
  set_fact:
    wireguard_public_key: "{{ wireguard__public_key_result.stdout }}"

### Configuration file

- name: Generate WireGuard configuration file
  template:
    src: etc/wireguard/wg.conf.j2
    dest: "{{ wireguard_remote_directory }}/{{ wireguard_interface }}.conf"
    owner: "{{ wireguard_conf_owner }}"
    group: "{{ wireguard_conf_group }}"
    mode: "{{ wireguard_conf_mode }}"
  notify:
    - Reload WireGuard interface

### Service

- name: Start and enable WireGuard service
  service:
    name: "wg-quick@{{ wireguard_interface }}"
    state: started
    enabled: true
  when: not ansible_os_family == 'Darwin'
