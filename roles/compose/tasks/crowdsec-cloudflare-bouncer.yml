---
- name: Wait for Crowdsec container
  containers.podman.podman_container_info:
    name: crowdsec
  register: crowdsec_info_result
  until: crowdsec_info_result.containers[0]['State']['Running']
  retries: 5
  delay: 3
  when: container_state in ['present', 'started']

# 1. Generate Cloudflare API token: https://doc.crowdsec.net/docs/bouncers/cloudflare/#cloudflare-configuration
# 2. Generate configs with instructions: https://doc.crowdsec.net/docs/bouncers/cloudflare/#using-docker
# 3. Update cfg.yml with correct values

- name: crowdsec-cloudflare-bouncer
  containers.podman.podman_container:
    name: crowdsec-cloudflare-bouncer
    # https://hub.docker.com/r/crowdsecurity/cloudflare-bouncer
    image: docker.io/crowdsecurity/cloudflare-bouncer
    state: "{{ container_state }}"
    recreate: "{{ container_recreate }}"
    generate_systemd: "{{ container_generate_systemd }}"
    volumes:
      - "{{ appdata_dir }}/crowdsec/cloudflare-bouncer/cfg.yaml:/etc/crowdsec/bouncers/crowdsec-cloudflare-bouncer.yaml"
      - "{{ appdata_dir }}/crowdsec/cloudflare-bouncer/cloudflare-cache.json:/var/lib/crowdsec/crowdsec-cloudflare-bouncer/cache/cloudflare-cache.json"
    ports:
      - 2112:2112
    label:
      io.containers.autoupdate: registry

- name: Has host Crowdsec LAPI IP
  ansible.builtin.lineinfile:
    path: "{{ appdata_dir }}/crowdsec/cloudflare-bouncer/cfg.yaml"
    line: "crowdsec_lapi_url: http://{{ ansible_default_ipv4.address }}:8088/"
    state: present
