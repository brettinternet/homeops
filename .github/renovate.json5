{
  "platform": "github",
  "repositories": ["brettinternet/homelab"],
  "username": "brettinternet-bot[bot]",
  "gitAuthor": "brettinternet-bot <brettinternet-bot[bot]@users.noreply.github.com>",
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["every weekend"],
  "pre-commit": {
    "enabled": true,
  },
  "ignorePaths": ["archive/**"],
  "flux": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"],
  },
  "helm-values": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"],
  },
  "kubernetes": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$", "provision/ansible/.+\\.ya?ml.j2$"],
  },
  "regexManagers": [
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["kubernetes/crds/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository and Flux Kustomization where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n",
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}",
    },
    {
      "description": "Process various other dependencies",
      "fileMatch": ["provision/ansible/.+\\.ya?ml$", "kubernetes/.+\\.ya?ml$"],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n",
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
  ],
  "packageRules": [
    {
      "description": "Disable kubernetes-api",
      "matchManagers": ["kubernetes"],
      "matchDatasources": ["kubernetes-api"],
      "enabled": false,
    },
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "separateMinorPatch": true,
      "ignoreDeprecated": true,
    },
    // global docker datasource settings
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "commitMessageTopic": "container image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "matchUpdateTypes": ["major", "minor", "patch"],
    },
    {
      "description": "Group Cert-Manager image (for CRDs) and chart",
      "groupName": "Cert-Manager",
      "matchPackagePatterns": ["cert-manager"],
      "matchDatasources": ["docker", "helm"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": true,
    },
    // add labels according to package and update types
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "labels": ["renovate/image", "dep/major"],
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "labels": ["renovate/image", "dep/minor"],
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "labels": ["renovate/image", "dep/patch"],
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "labels": ["renovate/helm", "dep/major"],
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "labels": ["renovate/helm", "dep/minor"],
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "labels": ["renovate/helm", "dep/patch"],
    },
  ],
}
