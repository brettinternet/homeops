---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app filebrowser
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      filebrowser:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/filebrowser/filebrowser
              tag: v2.30.0
            env:
              TZ: "${TIMEZONE}"
              FB_DATABASE: /config/filebrowser.db
              FB_ROOT: /data
              FB_LOG: stdout
              FB_NOAUTH: true
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
          # # 1. Disable `runAsNonRoot` for rsync container
          # # 2. Add service on port 22
          # rsync:
          #   image:
          #     repository: docker.io/axiom/rsync-server
          #     tag: latest
          #   env:
          #     USERNAME: root
          #     PASSWORD: asdf
          #     AUTHORIZED_KEYS: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDPaYZO7t/sFHOXXf/GJZz2mmoR91jHZtA8Zp0FlgXvBXJ1JJx/0MQa3iFzssdKe9pSSA/rNduDl38EFdye2r66LdD/0z0Id3xIhZ2noD/rNr7kslkzmZTdCfnY7mWIYjdZfXdTqicJTSms0RkC9mJoLQqhUMIIgXe5ZvQJPuPFaVWDUMTou6kdUUBcVJ/Y19BbGu86dc1QXM+qThzZRLr5tjLLR6Edy7Du+bckBHmoGhfMa+hSOaJklucpvzeB4GeEwQnilGuFzkRjUQv0d/P0Ytuamu1IJiqmUCZEkuQlifNQZp/b6+mfN3RHhKV8qwRpXN3bPTWBBAcNpdRVXtP575fiQfa7/soglz9GH9u7E8r/jabECu+rcwOgX1b1TQ0ZxIQJwyj6T0A5RKsoDAdKOSKIYGmFw75k2Lft4tn2cFLC/OvbMYaDpum3VmFSMn6DjSbxjWZ3BpMVJzmXzW8h363GANL6CEWlnf/rXO3M2EcMmOFr00ekAL0HAYIbQbk=
          #   securityContext:
          #     allowPrivilegeEscalation: false
          #     runAsUser: 0
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: filebrowser
        ports:
          http:
            port: *port
      # rsync:
      #   controller: filebrowser
      #   type: LoadBalancer
      #   annotations:
      #     io.cilium/lb-ipam-ips: "${LB_SSH_SERVER_ADDR}"
      #   ports:
      #     rsync:
      #       port: 22
      #       protocol: TCP
    ingress:
      app:
        className: internal
        # annotations:
          # nginx.ingress.kubernetes.io/auth-method: GET
          # nginx.ingress.kubernetes.io/auth-url: "http://authelia.auth.svc.cluster.local/api/verify"
          # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_EXTERNAL_DOMAIN}/?rm=$request_method"
          # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: "files.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 1Gi
      nfs:
        type: nfs
        server: "${NFS_SERVER_ADDR}"
        path: "${NFS_SERVER_STORAGE_DIR}"
        globalMounts:
          - path: /data/nfs
