# DVB support not available on Talos
# https://github.com/siderolabs/pkgs/issues/990
# Fork with DVB support: https://github.com/skyssolutions/talos-kernel
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.5.9522@sha256:6d393c4eee152100bd6762a94bdd891b8c80c1c8a914a7f906b4097ab69fd557
            env:
              TZ: "${TIMEZONE}"
              PLEX_ADVERTISE_URL: >-
                https://plex.${SECRET_EXTERNAL_DOMAIN},
                http://${LB_PLEX_ADDR}:32400,
                https://${LB_PLEX_ADDR}:32400
              PLEX_NO_AUTH_NETWORKS: >-
                ${NODE_CIDR},
                ${HOME_CIDR}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"], add: ["SYS_ADMIN"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: *port
                  periodSeconds: 10
                  failureThreshold: 30
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                device-plugin.arpa/tuner: 1
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000, 1000]
        seccompProfile: { type: RuntimeDefault }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["frigate"]
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
        dvr.feature.node.kubernetes.io/tuner: "true"
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_PLEX_ADDR}"
        ports:
          http:
            port: *port
          # Plex DLNA Server
          # https://support.plex.tv/articles/200350536-dlna/
          dnla-tcp:
            enabled: false
            port: 32469
            protocol: TCP
          dnla-udp:
            enabled: false
            port: 1900
            protocol: UDP
          # GDM Network discovery
          # https://support.plex.tv/articles/200430283-network/
          gdm-1-udp:
            port: 32410
            protocol: UDP
          gdm-2-udp:
            port: 32412
            protocol: UDP
          gdm-3-udp:
            port: 32413
            protocol: UDP
          gdm-4-udp:
            port: 32414
            protocol: UDP
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_EXTERNAL_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      # Config: /config/Library/Application Support/Plex Media Server
      config:
        existingClaim: plex
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: "${NFS_SERVER_ADDR}"
        path: "${NFS_SERVER_MEDIA_LIBRARY_DIR}"
        globalMounts:
          - path: /data/library
            # readOnly: true
