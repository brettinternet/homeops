---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: unpackerr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: sonarr
      namespace: media
    - name: radarr
      namespace: media
  values:
    controllers:
      unpackerr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/unpackerr/unpackerr
              tag: "0.14.5"
            env:
              TZ: "${TIMEZONE}"
              UN_WEBSERVER_METRICS: true
              UN_WEBSERVER_LOG_FILE: /logs/webserver.log
              UN_ACTIVITY: true
              UN_SONARR_0_URL: http://sonarr.media.svc.cluster.local
              # TODO: is this the right path?
              UN_SONARR_0_PATHS_0: /media/usenet/incomplete
              UN_SONARR_0_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: sonarr-secret
                    key: SONARR__AUTH__APIKEY
              UN_RADARR_0_URL: http://radarr.media.svc.cluster.local
              UN_RADARR_0_PATHS_0: /media/usenet/incomplete
              UN_RADARR_0_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: radarr-secret
                    key: RADARR__AUTH__APIKEY
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: unpackerr
        ports:
          http:
            port: 5656
    serviceMonitor:
      app:
        serviceName: unpackerr
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      logs:
        type: emptyDir
      media:
        type: nfs
        server: "${NFS_SERVER_ADDR}"
        path: "${NFS_SERVER_MEDIA_DIR}"
        globalMounts:
          - path: /media
