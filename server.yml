---
- name: Setup homelab servers
  hosts:
    - media
    - server
  tags: setup
  pre_tasks:
    ### Official ###
    - name: Install packages (pacman)
      become: true
      tags: update
      ansible.builtin.package:
        name:
          # Setup
          - base
          - dhcpcd
          - dosfstools
          - efibootmgr
          - git
          - grub
          - vim
          - linux
          - linux-headers
          - linux-firmware
          - mtools
          - nano
          - os-prober
          # Base
          - broot
          - clamav
          - curl
          - etckeeper
          - fd
          - firejail
          - fzy
          - htop
          - hwinfo
          - intel-ucode
          - man-db
          - mesa
          - ncdu
          - neofetch
          - networkmanager
          - net-tools
          - openssh
          - powertop
          - reflector
          - rsync
          - smartmontools
          - speedtest-cli
          - the_silver_searcher
          - tmux
          - trash-cli
          - ttf-liberation
          - unzip
          - usbguard
          - usbutils
          - vifm
          - zsh
          - wget
          - w3m
          # Server
          - cockpit
          - cockpit-machines
          - cockpit-pcp
          - cockpit-podman
          - cronie
          - crun # https://github.com/containers/podman/issues/8687
          - inetutils
          - packagekit
          - podman
          - renameutils
          - udisks2
  roles:
    ### AUR ###
    - role: yay
      tags: update
      vars:
        yay_packages:
          # Base
          - downgrade
          - python-fangfrisch
          - vim-plug
          - needrestart
        yay_state: present
    # If upgrades fail, it's likely the server requires manual intervention to
    # upgrade `linux` kernel with `zfs-linux`
    - upgrade
    - sudoers
    - ssh_setup
    # - prometheus
    - cockpit

# BEFORE: some manual setup with mergerfs and fstab mounts is required
- name: Setup media server
  hosts: media
  tags: setup
  pre_tasks:
    ### Official ###
    - name: Install packages (pacman)
      become: true
      tags: update
      ansible.builtin.package:
        name:
          - transmission-cli
        state: present
  roles:
    ### AUR ###
    - role: yay
      tags: update
      vars:
        yay_packages:
          - mergerfs
          - snapraid
        yay_state: present
        yay_extra_args:
    - role: snapraid
      vars:
        # TODO: add email values for snapraid-runner.conf.j2
        parity_disks:
          - path: /mnt/parity1
            content: false
          - path: /mnt/parity2
            content: false
        data_disks:
          - path: /mnt/disk1
            content: true
          - path: /mnt/disk2
            content: true
          - path: /mnt/disk3
            content: false
          - path: /mnt/disk4
            content: false
          - path: /mnt/disk5
            content: false
        snapraid_config_excludes:
          - "*.unrecoverable"
          - /tmp/
          - /lost+found/
          - downloads/
          - appdata/
          - snapshots/
          - "*.!sync"
          - .AppleDouble
          - ._AppleDouble
          - .DS_Store
          - ._.DS_Store
          - .Thumbs.db
          - .fseventsd
          - .Spotlight-V100
          - .TemporaryItems
          - .Trashes
          - .AppleDB

- name: Setup general server
  hosts: server
  tags: setup
  pre_tasks:
    ### Official ###
    - name: Install packages (pacman)
      become: true
      tags: update
      ansible.builtin.package:
        name:
          - libvirt # Also includes qemu-headless
        state: present

    # Ignore zfs-dkms and zfs-utils AUR packages and upgrade them explicitly
    - name: Ignore ZFS packages
      become: true
      tags: update
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        line: "IgnorePkg = zfs-dkms zfs-utils"
        insertafter: IgnorePkg
        state: present

  roles:
    ### AUR ###
    - role: yay
      tags: update
      vars:
        yay_packages:
          - cockpit-zfs-manager
        yay_state: present
        yay_extra_args:
    # Explicitly upgrade packages that are in IgnorePkg list
    - role: yay
      tags: update
      vars:
        yay_packages:
          - zfs-dkms
          - zfs-utils
        yay_state: latest
        yay_extra_args: --batchinstall --answerclean All --nodeps
      when: upgrade_zfs

# TODO: Setup/manage or just check state of ZFS https://wiki.archlinux.org/index.php/ZFS
# https://docs.ansible.com/ansible/latest/collections/community/general/zfs_module.html
# https://wiki.archlinux.org/index.php/ZFS

# TODO: check smart output for disk errors
# https://wiki.archlinux.org/index.php/S.M.A.R.T.
# https://github.com/grimmjow8/ansible-smartmontools
# https://github.com/LibreIT/ansible-smartd
# https://github.com/stuvusIT/smartd

# TODO: add telegraf support, and others
# https://github.com/dj-wasabi/ansible-telegraf

# Additional setup:
# https://github.com/ironicbadger/infra
# https://github.com/davestephens/ansible-nas

# TODO: backup with rsync
# https://docs.ansible.com/ansible/latest/collections/ansible/posix/synchronize_module.html

# TODO: setup powertop auto tune service https://wiki.archlinux.org/index.php/Powertop

- name: Setup media services
  hosts: media
  tags: services
  vars:
    containers:
      - plex
      - tautulli
      - ombi
      - nzbget
      - sonarr
      - radarr
      - lazylibrarian
      - calibre-web
    container_state: created
  roles:
    - role: podman_systemd
      vars:
        podman_systemd_action: remove
    - role: compose
    - role: podman_systemd
      vars:
        podman_systemd_action: generate

- name: Setup general services
  hosts: server
  tags: services
  vars:
    # Containers to use (roles/compose/tasks)
    containers:
      # TODO: fix prometheus rootless volume permissions https://github.com/MoOyeg/Rootless-Podman-For-Prometheus-Grafana/blob/main/prometheus.sh
      # TODO: add alertmanager https://hub.docker.com/r/prom/alertmanager
      # TODO: add grafana https://prometheus.io/docs/visualization/grafana/
      # TODO: integrate traefik with prometheus https://prometheus.io/docs/instrumenting/exporters/
      - adguard
      - espial
      - gitea_db
      - gitea
      - miniflux_db
      - miniflux
      - mealie
      - n8n_db
      - n8n
      - firefly_db
      - firefly
      - healthchecks
      - epicgames
      # - scrutiny_web
      # - scrutiny_collector
      # - valheim
      # - syncthing
      # - prometheus
      - oauth
      - traefik

    # absent - A container matching the specified name will be stopped and removed.
    # present - Asserts the existence of a container matching the name and any provided configuration parameters. If no container matches the name, a container will be created. If a container matches the name but the provided configuration does not match, the container will be updated, if it can be. If it cannot be updated, it will be removed and re-created with the requested config. Image version will be taken into account when comparing configuration. Use the recreate option to force the re-creation of the matching container.
    # started - Asserts there is a running container matching the name and any provided configuration. If no container matches the name, a container will be created and started. Use recreate to always re-create a matching container, even if it is running. Use force_restart to force a matching container to be stopped and restarted.
    # stopped - Asserts that the container is first present, and then if the container is running moves it to a stopped state.
    # created - (new feature) just created the image since our podman_systemd role will start the image with systemd
    container_state: created
    # container_recreate: true

    # Traefik middleware, scrutiny_collector
    ingress_local_ip: "{{ hostvars['server']['ansible_host'] }}"

    # Containers with a frontend to use with Traefik (roles/traefik/templates)
    frontend_containers:
      # media
      - name: plex
        host: media
      - name: tautulli
        host: media
      - name: ombi
        host: media
      - name: nzbget
        host: media
      - name: sonarr
        host: media
      - name: radarr
        host: media
      # server (needs a better name...)
      - name: adguard
        host: server
      - name: espial
        host: server
      - name: gitea
        host: server
      - name: miniflux
        host: server
      - name: mealie
        host: server
      - name: n8n
        host: server
      - name: firefly
        host: server
      - name: healthchecks
        host: server
      # - name: syncthing
      #   host: server
      # - name: prometheus
      #   host: server
      - name: oauth
        host: server
      - name: traefik
        host: server

    # Systemd user setup for podman containers - default setup/teardown depends on `container_state` var
    # podman_systemd_action: remove
    # NOTE: if changes are made to images in `compose/tasks` then you must stop/remove the systemd unit files, recreate the images, and force regenerate the unit files,
    # or else systemd will use stale start commands
    # podman_systemd_force_regenerate: true
  roles:
    - role: podman_systemd
      vars:
        podman_systemd_action: remove
    - role: traefik
      tags: traefik
      when: "'traefik' in containers"
    - role: compose
    - role: podman_systemd
      vars:
        podman_systemd_action: generate

- name: Setup host routing
  hosts: server
  tags:
    - services
    - routing
  roles:
    - role: ingress
      vars:
        # ingress__iptables_flush: true
        # ingress__enable_forwarding: false
#
# TODO: setup samba share
