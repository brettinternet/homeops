---
- name: Check if cluster is installed
  check_mode: false
  ansible.builtin.stat:
    path: /etc/rancher/k3s/config.yaml
  register: k3s_check_installed

- name: Set manifest facts
  ansible.builtin.set_fact:
    k3s_server_manifests_templates: []
    k3s_server_manifests_urls: []
  when: k3s_check_installed.stat.exists

- name: Install Kubernetes
  ansible.builtin.include_role:
    name: xanmanning.k3s
    public: true
  vars:
    # Additional vars defined in inventory dir
    k3s_state: installed

- name: Kubeconfig
  ansible.builtin.include_tasks: kubeconfig.yaml

- name: Wait for custom manifests to rollout
  when:
    - k3s_primary_control_node
    - (k3s_server_manifests_templates | length > 0
      or k3s_server_manifests_urls | length > 0)
  kubernetes.core.k8s_info:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    kind: "{{ item.kind }}"
    name: "{{ item.name }}"
    namespace: "{{ item.namespace | default('') }}"
    wait: true
    wait_sleep: 10
    wait_timeout: 360
  loop:
    - name: cilium
      kind: HelmChart
      namespace: kube-system
    - name: coredns
      kind: HelmChart
      namespace: kube-system
    - name: policy
      kind: CiliumL2AnnouncementPolicy
    - name: pool
      kind: CiliumLoadBalancerIPPool
    - name: podmonitors.monitoring.coreos.com
      kind: CustomResourceDefinition
    - name: prometheusrules.monitoring.coreos.com
      kind: CustomResourceDefinition
    - name: servicemonitors.monitoring.coreos.com
      kind: CustomResourceDefinition

- name: Coredns
  when: k3s_primary_control_node
  ansible.builtin.include_tasks: coredns.yaml

- name: Cilium
  when: k3s_primary_control_node
  ansible.builtin.include_tasks: cilium.yaml

- name: Clean
  when: k3s_primary_control_node
  ansible.builtin.include_tasks: clean.yaml

- name: Stale Containers
  ansible.builtin.include_tasks: stale_containers.yaml
  vars:
    stale_containers_state: enabled
