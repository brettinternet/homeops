---
- name: Check if cluster is installed
  check_mode: false
  ansible.builtin.stat:
    path: /etc/rancher/k3s/config.yaml
  register: k3s_check_installed

- name: Set manifest facts
  ansible.builtin.set_fact:
    k3s_server_manifests_templates: []
    k3s_server_manifests_urls: []
  when: k3s_check_installed.stat.exists

- name: Install Kubernetes
  ansible.builtin.include_role:
    name: xanmanning.k3s
    public: true
  vars:
    # Additional vars defined in inventory dir
    k3s_state: installed

- name: Get absolute path to this Git repository
  delegate_to: localhost
  become: false
  run_once: true
  check_mode: false
  ansible.builtin.command: |-
    git rev-parse --show-toplevel
  register: repo_abs_path

- name: Copy kubeconfig to provision folder
  run_once: true
  ansible.builtin.fetch:
    src: "/etc/rancher/k3s/k3s.yaml"
    dest: "{{ repo_abs_path.stdout }}/provision/kubeconfig"
    flat: true
  when:
    - k3s_control_node is defined
    - k3s_control_node

- name: Update kubeconfig with the correct IPv4 address
  delegate_to: localhost
  become: false
  run_once: true
  ansible.builtin.replace:
    path: "{{ repo_abs_path.stdout }}/provision/kubeconfig"
    regexp: "https://127.0.0.1:6443"
    replace: "https://{{ k3s_registration_address }}:6443"

# Cleaning up the manifests from the /var/lib/rancher/k3s/server/manifests
# directory is needed because k3s has an awesome
# "feature" to always deploy these on restarting
# the k3s systemd service. Removing them does
# not uninstall the manifests.

# Removing them means we can manage the lifecycle
# of these components outside of the
# /var/lib/rancher/k3s/server/manifests directory

# FIXME(ansible): Check for deployments to be happy rather than waiting
- name: Wait for k3s to finish installing the deployed manifests
  ansible.builtin.wait_for:
    timeout: 15
  when: k3s_server_manifests_templates | length > 0
    or k3s_server_manifests_dir | length > 0

- name: Remove deployed manifest templates
  ansible.builtin.file:
    path: "{{ k3s_server_manifests_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
    state: absent
  loop: "{{ k3s_server_manifests_templates | default([]) }}"

- name: Remove deployed manifest urls
  ansible.builtin.file:
    path: "{{ k3s_server_manifests_dir }}/{{ item.filename }}"
    state: absent
  loop: "{{ k3s_server_manifests_urls | default([]) }}"
