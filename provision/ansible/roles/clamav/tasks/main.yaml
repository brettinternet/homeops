# https://wiki.archlinux.org/title/ClamAV
# https://github.com/geerlingguy/ansible-role-clamav
---
- name: Install dependencies
  ansible.builtin.package:
    state: latest
    name:
      - clamav
  register: clamav_install

- name: Setup clamav
  ansible.builtin.command: freshclam
  when:
    - clamav_install.changed
  register: freshclam_result
  notify: restart clamav daemon
  failed_when:
    - freshclam_result is failed
    - freshclam_result.stderr.find('locked by another process') != -1

- name: Change configuration
  ansible.builtin.lineinfile:
    path: /etc/clamav/clamd.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line | default('') }}"
    state: "{{ item.state | default('present') }}"
    mode: 0644
    create: yes
  with_items:
    - regexp: ^.*Example$
      state: absent
    - regexp: ^.*LocalSocket .*$
      line: LocalSocket /var/run/clamav/clamd.ctl

- name: Enable clamav daemon
  ansible.builtin.systemd:
    name: clamav-daemon.service
    enabled: true
    state: started

- name: Enable clamav definitions update
  ansible.builtin.systemd:
    name: clamav-freshclam.service
    enabled: true
    state: started

- name: Check Fangfrisch exists
  ansible.builtin.stat:
    path: /etc/fangfrisch/fangfrisch.conf
  register: fangfrisch_result

- block:
    - name: Install fangfrisch database repo
      ansible.builtin.include_role:
        name: aur
      vars:
        state: latest
        packages:
          - python-fangfrisch

    - name: Create database structure
      become_user: clamav
      ansible.builtin.command: |-
        /usr/bin/fangfrisch --conf /etc/fangfrisch/fangfrisch.conf initdb
  when: not fangfrisch_result.stat.exists

- name: Enable clamav fangfrisch timer update
  ansible.builtin.systemd:
    name: fangfrisch.timer
    enabled: true

- name: Test clamav installation # noqa no-changed-when
  ansible.builtin.shell: |
    set -o pipefail
    curl -s https://secure.eicar.org/eicar.com.txt | clamscan -
  register: clamav__test_result
  failed_when: "'FOUND' not in clamav__test_result.stdout"
