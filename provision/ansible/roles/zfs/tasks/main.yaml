# https://wiki.archlinux.org/index.php/ZFS
# TODO: create snapshots https://docs.ansible.com/ansible/latest/collections/community/general/zfs_module.html
# https://wiki.archlinux.org/title/ZFS#Automatic_snapshots

# Manual steps:
# 1. import ZFS pool
---
- name: Check supported distribution
  fail:
    msg:
      - "Unsupported distribution: {{ ansible_facts['distribution'] | lower }}"
      - This role only supports Arch Linux
  when: ansible_facts['distribution'] | lower != 'archlinux'

- name: Install ZFS dependencies
  community.general.pacman:
    state: present
    name:
      # https://unix.stackexchange.com/a/723723
      # https://github.com/archzfs/archzfs/issues/464
      - openssl-1.1

- name: Install AUR ZFS dependencies
  ansible.builtin.include_role:
    name: aur
  vars:
    # Upgrade with script instead of role directly since both packages must be updated together
    state: present
    packages:
      - zfs-dkms
      - zfs-utils

- name: Install latest ZFS automatic snapshot dependencies
  ansible.builtin.include_role:
    name: aur
  vars:
    state: latest
    packages:
      - zfs-auto-snapshot-git

# Ignore packages to only upgrade them explicitly
- name: Ignore ZFS packages
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    line: "IgnorePkg = zfs-dkms zfs-utils"
    insertafter: IgnorePkg
    state: present

- name: Copy updater script
  ansible.builtin.template:
    src: update-zfs.sh.j2
    dest: "/home/{{ ansible_user }}/update-zfs.sh"
    mode: 0744

- name: Update dependencies
  ansible.builtin.command: "/bin/bash /home/{{ ansible_user }}/update-zfs.sh"

- name: Load 'zfs' kernel module
  community.general.modprobe:
    name: zfs
    state: present

# https://wiki.archlinux.org/title/ZFS#Automatic_Start

- name: Start/enable import service
  ansible.builtin.systemd:
    name: zfs-import-cache.service
    enabled: true
    state: started

- name: Start/enable import target
  ansible.builtin.systemd:
    name: zfs-import.target
    enabled: true
    state: started

- name: Start/enable mount service
  ansible.builtin.systemd:
    name: zfs-mount.service
    enabled: true
    state: started

# Maintenance jobs

- name: Start/enable zfs target
  ansible.builtin.systemd:
    name: zfs.target
    enabled: true
    state: started

- name: Start/enable weekly snapshot timer
  ansible.builtin.systemd:
    name: zfs-auto-snapshot-weekly.timer
    enabled: true

# Source: https://wiki.archlinux.org/title/ZFS#Start_with_a_service_or_timer
- name: Copy scrub timer and service unit files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: "0755"
  with_items:
    - zfs-scrub@.timer
    - zfs-scrub@.service

- name: Start/enable zfs scrub timer
  ansible.builtin.systemd:
    name: "zfs-scrub@{{ zpool }}.timer"
    enabled: true
    state: started

- name: Start/enable zfs trim timer
  ansible.builtin.systemd:
    name: "zfs-trim@{{ zpool }}.timer"
    enabled: true
    state: started

- name: Get zpool status with trim progress
  ansible.builtin.command: "zpool status -t {{ zpool }}"
  register: status_result

- name: Log zpool status result
  ansible.builtin.debug:
    msg:
      - "{{ status_result.stdout }}"
