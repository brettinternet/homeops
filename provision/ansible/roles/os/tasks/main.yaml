---
- name: Set timezone
  community.general.timezone:
    name: "{{ timezone }}"
  when:
    - timezone is defined

- name: Set hostname to inventory hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Check supported distribution
  fail:
    msg:
      - "Unsupported distribution: {{ ansible_facts['distribution'] | lower }}"
      - "Supported role distributions are {{ supported_distributions }}"
  when: ansible_facts['distribution'] | lower not in supported_distributions

- name: Upgrade packages
  include_tasks: "{{ ansible_facts['distribution'] | lower }}.yaml"

- name: Enable forwarding and set other sysctl
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/99-kubernetes.conf
    reload: true
  with_dict: "{{ sysctl_config }}"
  vars:
    sysctl_config:
      # net.ipv4.ip_forward: 1
      # net.ipv4.conf.all.forwarding: 1
      # net.ipv6.conf.all.forwarding: 1
      # # net.bridge.bridge-nf-call-iptables: 1
      # # net.bridge.bridge-nf-call-ip6tables: 1
      # net.ipv4.conf.default.rp_filter: 0
      # net.ipv4.conf.all.rp_filter: 0
      fs.inotify.max_user_watches: 524288
      fs.inotify.max_user_instances: 512
      # https://github.com/lucas-clemente/quic-go/wiki/UDP-Receive-Buffer-Size
      net.core.rmem_max: 2500000

- name: Copy sudoers defaults
  become: true
  ansible.builtin.copy:
    src: sudoers-defaults
    dest: /etc/sudoers.d/defaults
    validate: "visudo -cf %s"
    mode: 0644

- name: Disable SSH password tunneling
  become: true
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    line: PasswordAuthentication no

- name: Only allow SSH from current user
  become: true
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    line: "AllowUsers {{ ansible_user }}"
#
# DNS
# https://hub.docker.com/r/adguard/adguardhome#resolved-daemon
# https://wiki.archlinux.org/title/systemd-resolved#DNS
# - name: Disable Ubuntu's caching DNS resolver on port 53
#   lineinfile:
#     dest: /etc/systemd/resolved.conf
#     line: "DNSStubListener=no"
#     regexp: "#?DNSStubListener=yes"
#     state: present

# - name: Create a symlink to resolv.conf
#   ansible.builtin.file:
#     src: /run/systemd/resolve/resolv.conf
#     dest: /etc/resolv.conf
#     owner: root
#     group: root
#     state: link
#   register: resolv_conf

# - name: restart systemd-resolved
#   service:
#     name: systemd-resolved
#     state: restarted
#   when: resolv_conf.changed
