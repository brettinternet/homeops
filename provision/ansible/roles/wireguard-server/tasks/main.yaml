---
- name: Check supported distribution
  ansible.builtin.fail:
    msg:
      - "Unsupported distribution: {{ ansible_facts['distribution'] | lower }}"
      - "Supported role distributions are {{ supported_distributions }}"
  when: ansible_facts['distribution'] | lower not in supported_distributions

- name: Install dependencies
  ansible.builtin.apt:
    state: latest
    name:
      # module required for kernel versions < 5.6
      - wireguard
    update_cache: true

- name: Install docker
  ansible.builtin.include_role:
    name: geerlingguy.docker
    public: true

- name: Enable forwarding and set other sysctl
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/99-sysctl.conf
    reload: true
  with_dict: "{{ sysctl_config }}"
  vars:
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1

- name: Create the project directory if it does not exist
  ansible.builtin.file:
    path: "{{ project_dir }}"
    state: directory
    mode: 0755

- name: Create env file
  ansible.builtin.template:
    src: env.j2
    dest: "{{ project_dir }}/.env"
    owner: "{{ ansible_user }}"
    group: sudo
    mode: 0744
  when:
    - env_vars is defined
    - env_vars | length > 0

- name: Create compose file
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ project_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: sudo
    mode: 0744
    backup: true

- name: Update docker images
  ansible.builtin.command:
    chdir: "{{ project_dir }}"
    cmd: docker-compose pull

- name: Start docker services
  ansible.builtin.command:
    chdir: "{{ project_dir }}"
    cmd: docker-compose up -d

- name: Split peers by comma to make list
  ansible.builtin.set_fact:
    wg_peers_list: "{{ wg_peers.split(',') }}"
  when: wg_peers is defined

- name: Copy peer configs from server to use in clients
  ansible.builtin.include_tasks: copy-config.yaml
  loop: "{{ wg_peers_list }}"
  loop_control:
    loop_var: peer_name
  when:
    - wg_peers is defined
    - wg_peers_list | length > 0
