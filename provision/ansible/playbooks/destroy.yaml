---
- hosts:
    - master
    - worker
  become: true
  vars_prompt:
    - name: destroy_confirmation
      prompt: |-
        Are you sure you want to destroy this cluster?
        Type DESTROY to proceed
      default: "n"
      private: false

  pre_tasks:
    - name: Check for confirmation
      ansible.builtin.fail:
        msg: Aborted nuking the cluster
      when: destroy_confirmation != 'DESTROY'

  tasks:
    - name: Uninstall k3s
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: uninstalled

    # If previous step fails...
    # https://rancher.com/docs/k3s/latest/en/installation/uninstall/
    - name: Run server uninstall script as fail-safe
      ansible.builtin.script: /usr/local/bin/k3s-uninstall.sh
      args:
        removes: /usr/local/bin/k3s-uninstall.sh
      when: inventory_hostname in groups['master']

    - name: Run agent uninstall script as fail-safe
      ansible.builtin.script: /usr/local/bin/k3s-agent-uninstall.sh
      args:
        removes: /usr/local/bin/k3s-agent-uninstall.sh
      when:
        - "'worker' in groups"
        - inventory_hostname in groups['worker']

    - name: Gather list of CNI files
      ansible.builtin.find:
        paths: /etc/cni/net.d
        patterns: "*"
        hidden: true
      register: directory_contents

    - name: Delete CNI files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ directory_contents.files }}"

    - name: Delete other directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/lib/rook
        - /etc/rancher
        - /var/lib/rancher
