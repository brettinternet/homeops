---
# PCIe passthrough in Proxmox https://3os.org/infrastructure/proxmox/gpu-passthrough/igpu-passthrough-to-vm/#windows-virtual-machine-igpu-passthrough-configuration

## TODO: setup https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_kvm_module.html
# - hosts:
#     - harambe
#   become: true
#   roles:
#     # Manual setup steps required, see roles for details
#     # - fans
#   tasks:
#     - name: Install task dependency
#       ansible.builtin.package:
#         name: python3-proxmoxer
#         state: present

#     # https://pve.proxmox.com/wiki/Passthrough_Physical_Disk_to_Virtual_Machine_(VM)
#     - name: Passthrough disks
#       community.general.proxmox_kvm:
#         api_user: "{{ ansible_user }}"
#         api_host: "{{ ansible_host }}"
#         api_token_id: "{{ proxmox_api_token_id }}"
#         api_token_secret: "{{ proxmox_api_token_secret }}"
#         vmid: "{{ disk_passthrough_vmid }}"
#         scsi: "{{ scsi_disks | items2dict }}"
#         state: current
#       vars:
#         scsi_disks:
#           - key: "scsi{{ index }}"
#             value: "{{ item }}"
#       loop: "{{ passthrough_disks }}"
#       loop_control:
#         index_var: index
#       when:
#        - disk_passthrough_vmid is defined
#        - passthrough_disks is defined
#        - passthrough_disks | length > 0

- name: Setup OS and upgrade deps
  hosts:
    - kubernetes
  become: true
  roles:
    - os
    - role: upgrade
      vars:
        allow_reboot: false

- name: Setup hosts
  hosts:
    - kubernetes
  become: true
  pre_tasks:
    - name: Check supported distribution
      ansible.builtin.fail:
        msg:
          - "Unsupported distribution: {{ ansible_facts['distribution'] | lower }}"
          - This role only supports Arch Linux
      when: ansible_facts['distribution'] | lower != 'archlinux'

    - name: Install packages
      ansible.builtin.package:
        state: latest
        name:
          - base
          - dhcpcd
          - dosfstools
          - efibootmgr
          - git
          - grub
          - vim
          - linux
          - linux-headers
          - linux-firmware
          - mtools
          - nano
          - os-prober
          - btop
          - curl
          - intel-ucode
          - mesa
          - networkmanager
          - net-tools
          - openssh
          - reflector
          - rsync
          - smartmontools
          - tmux
          - trash-cli
          - unzip
          - usbutils
          - zsh
          - wget
          - man-db
          - less
          - fd
          - gdu
          - bottom
          - qemu-guest-agent

    - name: Install AUR dependencies
      ansible.builtin.include_role:
        name: aur
      vars:
        state: latest
        packages:
          - downgrade
          - vim-plug
          - needrestart

  roles:
    - ssh
    - etckeeper
    - user
    - role: dotfiles
      vars:
        dotfiles_repo: https://github.com/brettinternet/dotfiles
        default_direnv_lines:
          - export KUBECONFIG="/etc/rancher/k3s/k3s.yaml"
    - cockpit
    - role: zfs
      when:
        - zpool is defined
    - role: snapraid
      when:
        - snapraid
    - role: mergerfs
      when:
        - fstab_lines is defined
        - fstab_lines | length > 0
    - role: smart
      when:
        - disks is defined
        - disks | length > 0
    - clamav

- name: Setup GPUs
  hosts:
    - k8s-2
  become: true
  roles:
    - gpu-k8s
