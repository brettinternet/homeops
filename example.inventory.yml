---
# https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#intro-inventory

# Consider encrypting this file with ansible-vault
# Docs: https://docs.ansible.com/ansible/latest/user_guide/vault.html
# Encrypt: `ansible-vault encrypt inventory.yml`

all:
  vars:
    ### Terraform ###

    # Digital Ocean token for provisioning the bastion server
    # https://www.digitalocean.com/docs/apis-clis/api/create-personal-access-token/
    do_token:

    ### Containers ###

    # Folder and container ownership, you may also define these per host
    puid: 1000
    pgid: 1000

    # Set the desired timezone for containers
    # `cat /etc/timezone`
    # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    # eg. America/Los_Angeles
    tz:

    # Provide your Cloudflare email and global API key for ACME validation
    # through Traefik's DNS challenge
    # https://go-acme.github.io/lego/dns/cloudflare/
    cloudflare_email:
    cloudflare_api_key:
    # Your root domain name with TLD (e.g. example.com)
    root_domain:

    # List of strings with basic auth user and password hash (User:Hash)
    # Use `htpasswd` from the `apache` package to generate a password hash
    # https://doc.traefik.io/traefik/middlewares/basicauth/
    # BasicAuth is used for Prometheus, Calibre content server
    basic_auth_users:
      - "<user>:<htpasswd hash>" # `htpasswd -nB admin` (then enter password in prompt)
    basic_auth_users_prometheus:
      - "<user>:<htpasswd hash>"

    ### Apps ###

    # Google OAuth - https://console.developers.google.com
    # Make sure to add $root_domain under Authorized Domains in the OAuth Concent Screen
    # Set $root_domain in Domain Verification
    oauth_client_id:
    oauth_client_secret:
    # Create random secret `openssl rand -hex 16`
    oauth_secret:
    # set one or multiple emails to allow login
    oauth_whitelist:

    # https://www.plex.tv/claim/ (must be used within 4 minutes)
    plex_claim_code:
    plex_hostname:
    plex_allowed_networks:

    miniflux_password:
    miniflux_postgres_password:

    gitea_postgres_password:

    # `head /dev/urandom | LC_ALL=C tr -dc 'A-Za-z0-9' | head -c 32 && echo`
    firefly_app_key:
    firefly_mapbox_api_key:
    firefly_postgres_password:

    healthchecks_email:
    healthchecks_password:
    healthchecks_secret_key:
    podman_auto_update_healthchecks_url:

    n8n_basic_auth_user:
    n8n_basic_auth_password:
    n8n_postgres_password:

    grafana_admin_password:

    # For healthchecks,
    smtp_email_from:
    smtp_host: smtp.gmail.com
    smtp_port: 587
    smtp_user:
    smtp_password:

    valheim_server_name:
    valheim_server_password:

    epicgames_email:
    epicgames_password:

  children:
    homelab:
      hosts:
        # Define homelab hostname and vars (mine are separate into two hosts)
        media:
          # https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters
          ansible_host: # use `ansible_connection: local` for local
          ansible_user:

          # Config
          ssh_keys_url: https://github.com/<username>.keys # gitlab works, too
          # include or exclude in same order as https://github.com/settings/keys
          # e.g. exclude all but the first line (1!d) or delete specific lines
          ssh_keys_sed_arg: 1d;3d;5d

          # Provide a directory for storage and local media in container volumes
          # Subdirectories can be created to separate tv, movies, nzbget, etc
          # eg. /mnt/storage
          storage_dir:
          # Provide a directory for storing service configuration locally
          # within container volumes; subdirectories are created by each service
          appdata_dir: "{{ storage_dir }}/appdata"

          scrutiny_collector_devices:
            # - "/dev/sda:/dev/xvda:rwm"
            # - /dev/sda

        server:
          # https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters
          ansible_host: # use `ansible_connection: local` for local
          ansible_user:

          # Config
          ssh_keys_url: https://github.com/<username>.keys # gitlab works, too
          # include or exclude in same order as https://github.com/settings/keys
          # e.g. exclude all but the first line (1!d) or delete specific lines
          ssh_keys_sed_arg: 1d;3d;5d

          # Server host
          upgrade_zfs: false

          # eg. /mnt/tank
          storage_dir:
          appdata_dir: "{{ storage_dir }}/appdata"

          # Snapraid
          snapraid_healthchecks_url:

          scrutiny_collector_devices:
            # - /dev/sda

          # Prometheus
          prometheus_install_node_exporter: true
          node_exporter_basic_auth_users:
            randomuser: examplepassword
          prometheus_install_server_config: true
          prometheus_server_config_path: "{{ appdata_dir }}/prometheus/prometheus.yml" # Mounted path
          prometheus_scrape_configs:
            - job_name: prometheus
              static_configs:
                - targets:
                    - localhost:9090
            - job_name: node
              file_sd_configs:
                - files:
                    # Path within the container
                    - /etc/prometheus/file_sd/node.yml
            - job_name: traefik
              metrics_path: /metrics
              static_configs:
                - targets:
                    - "{{ ansible_default_ipv4.address }}:9180"
            - job_name: alertmanager
              file_sd_configs:
                - files:
                    - /etc/prometheus/file_sd/alertmanager.yml
            - job_name: grafana
              file_sd_configs:
                - files:
                    - /etc/prometheus/file_sd/grafana.yml
          prometheus_targets:
            node:
              # Add node exporter targets here
              - targets:
                  - "{{ ansible_default_ipv4.address }}:9100"
                labels:
                  env: node
            alertmanager:
              - targets:
                  - "{{ ansible_default_ipv4.address }}:9093"
                labels:
                  env: home
            grafana:
              - targets:
                  - "{{ ansible_default_ipv4.address }}:3002"
                labels:
                  env: home

    bastion:
      hosts:
        # Define bastion hostname and vars
        myremote:
          ansible_python_interpreter: /usr/bin/python3
