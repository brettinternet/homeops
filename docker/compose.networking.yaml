---
x-options: &options
  profiles: [networking]
  networks: [default]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy:
    restart_policy: &restart_policy
      condition: on-failure
      delay: 5s
      max_attempts: 3
      window: 45s

volumes:
  config:
    driver_opts:
      type: nfs
      o: addr=nfs-config,hard,timeo=600,retrans=3,proto=tcp,nfsvers=4.2,port=2049,rsize=4096,wsize=4096,noacl,nocto,noatime,nodiratime
      device: :/shared
  media:
    driver_opts:
      type: nfs
      o: addr=nfs-media,hard,timeo=600,retrans=3,proto=tcp,nfsvers=4.2,port=2049,rsize=4096,wsize=4096,noacl,nocto,noatime,nodiratime
      device: :/shared

services:
  unifi:
    <<: *options
    image: lscr.io/linuxserver/unifi-controller:latest
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/unifi:/config"
    ports:
      - 8080:8080
      # STUN
      - 3478:3478/udp
      # AP discovery
      - 10001:10001/udp
      # 'Make controller discoverable on L2 network' option
      - 1900:1900/udp
      # mobile throughput test
      - 6789:6789/udp
      # Remote syslog port
      - 5514:5514/udp
      # guest portal redirect ports
      # - 8843:8843/udp
      # - 8880:8880/udp
    labels:
      traefik.enable: "true"
      traefik.http.routers.unifi.middlewares: hsts-header, ipallowlist
      traefik.http.routers.unifi.rule: Host(`unifi.${PRIVATE_DOMAIN}`)
      traefik.http.routers.unifi.entrypoints: websecure
      traefik.http.services.unifi.loadbalancer.server.port: 8443
      traefik.http.serverstransports.unifi.insecureskipverify: "true"

  cloudflare-ddns:
    <<: *options
    image: joshava/cloudflare-ddns:latest
    environment:
      <<: *environment
      CF_DNS__CRON: "*/10 * * * *"
      CF_DNS__AUTH__SCOPED_TOKEN: "${CLOUDFLARE_API_TOKEN}"
      CF_DNS__DOMAINS_0__ZONE_NAME: "${PRIVATE_DOMAIN}"
      CF_DNS__DOMAINS_0__ZONE_ID: "${CLOUDFLARE_PRIVATE_DOMAIN_ZONE_ID}"
      CF_DNS__DOMAINS_0__NAME: "local.${PRIVATE_DOMAIN}"
      CF_DNS__DOMAINS_0__CREATE: "true"
      CF_DNS__DOMAINS_0__TYPE: A

  nfs-config:
    <<: *options
    image: itsthenetwork/nfs-server-alpine:latest
    cap_add: [SYS_ADMIN, SETPCAP]
    environment:
      <<: *environment
      SHARED_DIRECTORY: /shared
    volumes:
      - "${CONFIG_DIR}:/shared"
    deploy:
      restart_policy: *restart_policy
      placement:
        constraints:
          - node.hostname == "${CONFIG_HOSTNAME}"

  nfs-media:
    <<: *options
    image: itsthenetwork/nfs-server-alpine:latest
    cap_add: [SYS_ADMIN, SETPCAP]
    environment:
      <<: *environment
      SHARED_DIRECTORY: /shared
    volumes:
      - "${MEDIA_DIR}:/shared"
    deploy:
      restart_policy: *restart_policy
      placement:
        constraints:
          - node.hostname == "${MEDIA_HOSTNAME}"

  nfs-shared:
    <<: *options
    image: itsthenetwork/nfs-server-alpine:latest
    cap_add: [SYS_ADMIN, SETPCAP]
    environment:
      <<: *environment
      SHARED_DIRECTORY: /shared
    volumes:
      - "${SHARED_DIR}:/shared"
    ports:
      - 2049:2049
    deploy:
      restart_policy: *restart_policy
      placement:
        constraints:
          - node.hostname == "${CONFIG_HOSTNAME}"

  smb:
    <<: *options
    image: dperson/samba:latest
    environment:
      <<: *environment
      SHARE: "shared;/shared;yes;no;yes;;;;"
      USERID: "${PUID}"
      GROUPID: "${PGID}"
    volumes:
      - "${SHARED_DIR}:/shared"
    ports:
      - 139:139
      - 445:445
    deploy:
      restart_policy: *restart_policy
      placement:
        constraints:
          - node.hostname == "${CONFIG_HOSTNAME}"
