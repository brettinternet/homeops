---
x-options: &options
  profiles: [home]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy:
    restart_policy:
      condition: unless-stopped

services:
  homeassistant:
    <<: *options
    image: ghcr.io/home-assistant/home-assistant:stable
    network_mode: host
    cap_add:
      - CAP_NET_RAW
      - CAP_NET_BIND_SERVICE
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/homeassistant:/config"
    devices:
      - /dev/serial/by-id/${DEVICE_ID_ZWAVE}:/dev/ttyUSB0
      - /dev/serial/by-id/${DEVICE_ID_ZIGBEE}:/dev/ttyUSB1
    labels:
      traefik.enable: "true"
      traefik.http.routers.homeassistant.rule: Host(`home.${PUBLIC_DOMAIN}`)
      traefik.http.services.homeassistant.loadbalancer.server.port: 8123
      traefik.http.routers.homeassistant.entrypoints: websecure

  esphome:
    <<: *options
    image: esphome/esphome:latest
    network_mode: host
    environment:
      <<: *environment
      ESPHOME_DASHBOARD_USE_PING: "true"
    volumes:
      - "${CONFIG_DIR}/esphome:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.esphome.middlewares: hsts-header, ipallowlist, authelia_private
      traefik.http.routers.esphome.rule: Host(`esphome.${PRIVATE_DOMAIN}`)
      traefik.http.services.esphome.loadbalancer.server.port: 6052
      traefik.http.routers.esphome.entrypoints: websecure

  frigate:
    <<: *options
    image: ghcr.io/blakeblackshear/frigate:stable
    depends_on: [mosquitto]
    networks: [default]
    cap_add: [CAP_PERFMON]
    environment:
      <<: *environment
      FRIGATE_RTSP_PASSWORD: "${FRIGATE_RTSP_PASSWORD}"
      FRIGATE_MQTT_PASSWORD: "${FRIGATE_MQTT_PASSWORD}"
    volumes:
      - "${CONFIG_DIR}/frigate:/config"
      - cameras:/media/frigate
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: 4000000000
    shm_size: 2gb
    devices:
      - /dev/dri
      - /dev/bus/usb
    ports:
      - 127.0.0.1:5000:5000
      - 127.0.0.1:1984:1984 # go2rtc
      - 9554:8554 # RTSP
      - 8555:8555/tcp # WebRTC
      - 8555:8555/udp # WebRTC
    labels:
      traefik.enable: "true"
      traefik.http.routers.frigate.middlewares: hsts-header, ipallowlist, authelia_private
      traefik.http.routers.frigate.rule: Host(`video.${PRIVATE_DOMAIN}`)
      traefik.http.services.frigate.loadbalancer.server.port: 5000
      traefik.http.routers.frigate.entrypoints: websecure
      traefik.http.routers.frigate.service: frigate
      traefik.http.routers.go2rtc.middlewares: hsts-header, ipallowlist, authelia_private
      traefik.http.routers.go2rtc.rule: Host(`rtc.${PRIVATE_DOMAIN}`)
      traefik.http.services.go2rtc.loadbalancer.server.port: 1984
      traefik.http.routers.go2rtc.entrypoints: websecure
      traefik.http.routers.go2rtc.service: go2rtc

  mosquitto:
    <<: *options
    networks: [default]
    image: eclipse-mosquitto:latest
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - "${CONFIG_DIR}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf"
      - "${CONFIG_DIR}/mosquitto/data:/mosquitto/data"
      - "${CONFIG_DIR}/mosquitto/log:/mosquitto/log"

  # rtlamr:
  #   <<: *options
  #   image: allangood/rtlamr2mqtt
  #   devices:
  #     - /dev/bus/usb
  # volumes:
  #   - "${CONFIG_DIR}/rtlamr/rtlamr2mqtt.yaml:/etc/rtlamr2mqtt.yaml:ro"
  #   - "${CONFIG_DIR}/rtlamr/data:/var/lib/rtlamr2mqtt"

  # double-take:
  #   <<: *options
  #   container_name: double-take
  #   image: skrashevich/double-take
  #   environment:
  #     <<: *environment
  #   volumes:
  #     # `.storage`: /matches, /train, /config
  #     - "${CONFIG_DIR}/double-take:/.storage"
  #   labels:
  #     traefik.enable: "true"
  #     traefik.http.routers.double-take.middlewares: hsts-header, ipallowlist, authelia_private
  #     traefik.http.routers.double-take.rule: Host(`doubletake.${PRIVATE_DOMAIN}`)
  #     traefik.http.services.double-take.loadbalancer.server.port: 3000
  #     traefik.http.routers.double-take.entrypoints: websecure
