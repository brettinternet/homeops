---
x-service: &service
  profiles: [utils]
  networks: [default]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy:
    restart_policy:
      condition: unless-stopped

services:
  maddy:
    <<: *service
    image: foxcpp/maddy:0.7
    environment:
      <<: *environment
      DEBUG: "false"
      SMTP_PORT: "465"
      SMTP_USER: "${SMTP_USER}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_DOMAIN: "${SMTP_DOMAIN}"
    volumes:
      - "${CONFIG_DIR}/maddy/maddy.conf:/data/maddy.conf:ro"

  ntfy:
    <<: *service
    image: binwiederhier/ntfy:latest
    environment:
      <<: *environment
      NTFY_UPSTREAM_BASE_URL: https://ntfy.sh
      NTFY_BEHIND_PROXY: "true"
      NTFY_AUTH_FILE: /var/lib/ntfy/auth.db
      NTFY_CACHE_FILE: /var/lib/ntfy/cache.db
      NTFY_AUTH_DEFAULT_ACCESS: deny-all
      NTFY_BASE_URL: "https://ntfy.${PUBLIC_DOMAIN}"
      NTFY_ENABLE_LOGIN: "true"
    command: [serve]
    volumes:
      - "${CONFIG_DIR}/ntfy:/var/lib/ntfy"
    labels:
      traefik.enable: "true"
      traefik.http.routers.ntfy.rule: Host(`ntfy.${PUBLIC_DOMAIN}`)
      traefik.http.routers.ntfy.entrypoints: websecure
      traefik.http.services.ntfy.loadbalancer.server.port: 80

  espial:
    <<: *service
    image: jonschoning/espial:espial
    environment:
      <<: *environment
      IP_FROM_HEADER: "true"
      SQLITE_DATABASE: /app/data/espial.sqlite3
      SHOULD_LOG_ALL: "false"
    volumes:
      - "${CONFIG_DIR}/espial:/app/data"
    labels:
      traefik.enable: "true"
      traefik.http.routers.espial.middlewares: hsts-header
      traefik.http.routers.espial.rule: Host(`bookmarks.${PUBLIC_DOMAIN}`)
      traefik.http.routers.espial.entrypoints: websecure
      traefik.http.services.espial.loadbalancer.server.port: 3000

  miniflux:
    <<: *service
    image: miniflux/miniflux:latest
    environment:
      <<: *environment
      CREATE_ADMIN: "1"
      RUN_MIGRATIONS: "1"
      LOG_DATE_TIME: "1"
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: "${MINIFLUX_ADMIN_PASSWORD}"
      DATABASE_URL: "postgres://miniflux:${MINIFLUX_POSTGRES_PASSWORD}@miniflux_db/miniflux?sslmode=disable"
    labels:
      traefik.enable: "true"
      traefik.http.routers.miniflux.middlewares: hsts-header
      traefik.http.routers.miniflux.rule: Host(`rss.${PUBLIC_DOMAIN}`)
      traefik.http.routers.miniflux.entrypoints: websecure
      traefik.http.services.miniflux.loadbalancer.server.port: 8080

  miniflux_db:
    <<: *service
    image: library/postgres:10.10
    volumes:
      - "${CONFIG_DIR}/miniflux_db:/var/lib/postgresql/data"
    environment:
      <<: *environment
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: miniflux
      POSTGRES_USER: miniflux
      POSTGRES_PASSWORD: "${MINIFLUX_POSTGRES_PASSWORD}"

  mealie:
    <<: *service
    image: ghcr.io/mealie-recipes/mealie:v1.0.0-RC1.1
    environment:
      <<: *environment
      WEB_CONCURRENCY: 1
      MAX_WORKERS: 1
      PUID: "${PUID}"
      PGID: "${PGID}"
      TOKEN_TIME: 720 # 24 hours * 30 days
      BASE_URL: "https://recipes.${PUBLIC_DOMAIN}"
      AUTO_BACKUP_ENABLED: "true"
      ALLOW_SIGNUP: "false"
      SMTP_HOST: maddy
      SMTP_PORT: 25
      SMTP_AUTH_STRATEGY: NONE
      SMTP_FROM_NAME: Recipes
      SMTP_FROM_EMAIL: "${SMTP_USER}"
    volumes:
      - "${CONFIG_DIR}/mealie:/app/data"
    labels:
      traefik.enable: "true"
      traefik.http.routers.mealie.middlewares: hsts-header
      traefik.http.routers.mealie.rule: Host(`recipes.${PUBLIC_DOMAIN}`)
      traefik.http.routers.mealie.entrypoints: websecure
      traefik.http.services.mealie.loadbalancer.server.port: 9000

  cgit_public:
    <<: *service
    image: ghcr.io/brettinternet/cgit:latest
    environment:
      <<: *environment
      ROOT_TITLE: "git.${PUBLIC_DOMAIN}"
      ROOT_DESC: Mirrors of various public projects
      ROOT_README: /srv/git/README.md
      SECTION_FROM_STARTPATH: 1
      NOPLAINEMAIL: 1
    volumes:
      - "${CONFIG_DIR}/git:/srv/git"
    labels:
      traefik.enable: "true"
      traefik.http.routers.cgit-public.middlewares: hsts-header
      traefik.http.routers.cgit-public.rule: Host(`git.${PUBLIC_DOMAIN}`)
      traefik.http.routers.cgit-public.entrypoints: websecure
      traefik.http.services.cgit-public.loadbalancer.server.port: 80

  mirrors_public:
    <<: *service
    image: ghcr.io/brettinternet/update-mirrors:latest
    environment:
      <<: *environment
      PRE_COMMANDS: |-
        curl -fsS -m 10 --retry 5 -o /dev/null "http://healthchecks:8000/ping/${HEALTHCHECKS_MIRRORS_PUBLIC_REMOTE_BACKUP_UUID}/start"
      POST_COMMANDS_FAILURE: |-
        curl -fsS -m 10 --retry 5 -o /dev/null "http://healthchecks:8000/ping/${HEALTHCHECKS_MIRRORS_PUBLIC_REMOTE_BACKUP_UUID}/fail"
      POST_COMMANDS_SUCCESS: |-
        curl -fsS -m 10 --retry 5 -o /dev/null "http://healthchecks:8000/ping/${HEALTHCHECKS_MIRRORS_PUBLIC_REMOTE_BACKUP_UUID}"
      CRON: "*/20 * * * *"
      WORKING_DIRECTORY: /repos
      GIT_REMOTE_1: https://github.com/brettinternet/homelab
      GIT_REMOTE_2: https://github.com/brettinternet/dotfiles
      GIT_REMOTE_3: https://github.com/brettinternet/linux
      GIT_REMOTE_4: https://github.com/brettinternet/windows
      GIT_REMOTE_5: https://github.com/brettinternet/keyboards
      GIT_REMOTE_6: https://github.com/brettinternet/slides
      GIT_REMOTE_7: https://github.com/brettinternet/algorithms
      GIT_REMOTE_8: https://github.com/brettinternet/mic-mute
      GIT_REMOTE_9: https://github.com/brettinternet/provision
      GIT_REMOTE_10: https://github.com/brettinternet/brettinternet.github.io
      GIT_REMOTE_11: https://github.com/brettinternet/containers
      GIT_REMOTE_12: https://github.com/brettinternet/archive
    volumes:
      - "${CONFIG_DIR}/git:/repos"

  # cgit_private:
  #   <<: *service
  #   image: ghcr.io/brettinternet/cgit:latest
  #   environment:
  #     <<: *environment
  #     ROOT_TITLE: "git.${PRIVATE_DOMAIN}"
  #     ROOT_DESC: Private mirrors
  #     ROOT_README: /srv/git/README.md
  #     SECTION_FROM_STARTPATH: 1
  #     NOPLAINEMAIL: 1
  #   volumes:
  #     - "${CONFIG_DIR}/git_priv:/srv/git"
  #   labels:
  #     traefik.enable: "true"
  #     traefik.http.routers.cgit-private.middlewares: hsts-header, ipallowlist, authelia_private
  #     traefik.http.routers.cgit-private.rule: Host(`git.${PRIVATE_DOMAIN}`)
  #     traefik.http.routers.cgit-private.entrypoints: websecure
  #     traefik.http.services.cgit-private.loadbalancer.server.port: 80

  mirrors_private:
    <<: *service
    image: ghcr.io/brettinternet/update-mirrors:latest
    environment:
      <<: *environment
      PRE_COMMANDS: |-
        curl -fsS -m 10 --retry 5 -o /dev/null "http://healthchecks:8000/ping/${HEALTHCHECKS_MIRRORS_PRIVATE_REMOTE_BACKUP_UUID}/start"
      POST_COMMANDS_FAILURE: |-
        curl -fsS -m 10 --retry 5 -o /dev/null "http://healthchecks:8000/ping/${HEALTHCHECKS_MIRRORS_PRIVATE_REMOTE_BACKUP_UUID}/fail"
      POST_COMMANDS_SUCCESS: |-
        curl -fsS -m 10 --retry 5 -o /dev/null "http://healthchecks:8000/ping/${HEALTHCHECKS_MIRRORS_PRIVATE_REMOTE_BACKUP_UUID}"
      CRON: "*/20 * * * *"
      WORKING_DIRECTORY: /repos
      GIT_REMOTE_1: "${MIRRORS_GIT_REMOTE_1}"
      GIT_REMOTE_2: "${MIRRORS_GIT_REMOTE_2}"
      GIT_REMOTE_3: "${MIRRORS_GIT_REMOTE_3}"
    volumes:
      - "${CONFIG_DIR}/git_priv:/repos"
