---
version: "3.7"

networks:
  traefik_proxy:
    name: traefik_proxy
    external: true

services:
  influxdb:
    # https://hub.docker.com/_/influxdb
    image: influxdb
    container_name: influxdb
    restart: unless-stopped
    networks:
      - traefik_proxy
    user: "${PUID}"
    environment:
      - TZ=${TZ}
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_USER=telegraf
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    volumes:
      # docker run --rm influxdb influxd config > influxdb.conf
      - ${APPDATA_DIR}/influx/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ${STORAGE_DIR}/db/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086" # HTTP API
      - "8089:8089" # UDP
      # - "2003:2003" # graphite support
    # labels:
    #   traefik.enable: true
    #   traefik.docker.network: traefik_proxy
    #   traefik.backend: influxdb
    #   traefik.port: 8086
    #   traefik.frontend.rule: Host:influxdb.${ROOT_DOMAIN}
    #   traefik.frontend.headers.SSLRedirect: true
    #   traefik.frontend.headers.STSSeconds: 315360000
    #   traefik.frontend.headers.browserXSSFilter: true
    #   traefik.frontend.headers.contentTypeNosniff: true
    #   traefik.frontend.headers.forceSTSHeader: true
    #   traefik.frontend.headers.STSIncludeSubdomains: true
    #   traefik.frontend.headers.STSPreload: true
    #   traefik.frontend.headers.frameDeny: true
  telegraf:
    # https://hub.docker.com/_/telegraf
    image: telegraf
    container_name: telegraf
    restart: unless-stopped
    depends_on:
      - influxdb
    networks:
      - traefik_proxy
    user: "${PUID}"
    environment:
      - TZ=${TZ}
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
    volumes:
      # docker run --rm telegraf -sample-config > telegraf.conf
      - ${APPDATA_DIR}/influx/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc:/host/etc:ro
    # ports:
    #   - "8125:8125" # StatsD
    #   - "8092:8092" # UDP
    #   - "8094:8094" # TCP
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    user: "${PUID}"
    depends_on:
      - influxdb
    networks:
      - traefik_proxy
    environment:
      - TZ=${TZ}
      - GF_SERVER_ROOT_URL=https://grafana.${ROOT_DOMAIN}
      - GF_AUTH_BASIC_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,petrslavotinek-carpetplot-panel,vonage-status-panel,raintank-worldping-app
    volumes:
      - ${APPDATA_DIR}/grafana/data:/var/lib/grafana
      - ${APPDATA_DIR}/grafana/provisioning:/etc/grafana/provisioning
      # docker run --rm --entrypoint cat grafana/grafana /etc/grafana/grafana.ini > grafana.ini
      - ${APPDATA_DIR}/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ${STORAGE_DIR}/logs/grafana:/var/log/grafana
    ports:
      - "3000:3000"
    labels:
      traefik.enable: true
      traefik.docker.network: traefik_proxy
      traefik.backend: grafana
      traefik.port: 3000
      traefik.frontend.rule: Host:grafana.${ROOT_DOMAIN}
      traefik.frontend.headers.SSLRedirect: true
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.browserXSSFilter: true
      traefik.frontend.headers.contentTypeNosniff: true
      traefik.frontend.headers.forceSTSHeader: true
      traefik.frontend.headers.STSIncludeSubdomains: true
      traefik.frontend.headers.STSPreload: true
      traefik.frontend.headers.frameDeny: true
      traefik.frontend.auth.forward.address: http://oauth:4181
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: true
#
# DEBUG
# [outputs.influxdb] when writing to [udp://100.70.23.108:8089] could not serialize metric: "docker_container_mem,com.docker.

# telegraf       | 2019-09-02T17:51:00Z E! [inputs.ipmi_sensor]: Error in plugin: ipmitool not found: verify that ipmitool is installed and that ipmitool is in your PATH
# telegraf       | 2019-09-02T17:51:00Z E! [inputs.hddtemp]: Error in plugin: dial tcp 127.0.0.1:7634: connect: connection refused
# telegraf       | 2019-09-02T17:51:00Z E! [outputs.influxdb] when writing to [udp://100.70.23.108:8089]: write udp 172.22.0.6:54586->100.70.23.108:8089: write: connection refused
# telegraf       | 2019-09-02T17:51:00Z E! [agent] Error writing to output [influxdb]: could not write any address
# telegraf       | 2019-09-02T17:51:00Z E! [inputs.smart]: Error in plugin: smartctl not found: verify that smartctl is installed and that smartctl is in your PATH
