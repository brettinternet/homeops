
# Remove quotes when setting variable values
# unless you want to leave the value empty

# Provide the desired id that the container should use when running.
# This is helpful to maintain ownership of the config files and databases.
# Run id `whoami` to find the ID of your current user and group.
PUID=1000
PGID=1000

# Set the desired timezone for the container.
# Run `cat /etc/timezone` to find the timezone of the host os.
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
# eg. America/Toronto
TZ

# Provide your Cloudflare email and global API key for ACME validation
# see https://go-acme.github.io/lego/dns/cloudflare/
# only required if using traefik https reverse proxy
CLOUDFLARE_EMAIL
CLOUDFLARE_API_KEY
# Your root domain name with TLD (e.g. google.com)
ROOT_DOMAIN

# Provide a directory for storing service configuration locally
# This way it persists and is not lost on container update
# Subdirectories will be created automatically for each service
# Path should be absolute, or relative to docker-compose.yml
# eg. ./config
APPDATA_DIR

# Provide a directory for storage and media locally
# This way it persists and is not lost on container update
# Subdirectories can be created later to separate tv, movies, nzbget, etc
# Path should be absolute, or relative to docker-compose.yml
# eg. /mnt/storage
STORAGE_DIR

# Bind public facing ports to a specific address
# for routing traffic through VPN. This is because
# I route services to through WireGuard via Traefik
# instead of all host traffic.
# https://docs.docker.com/compose/compose-file/#ports
# https://github.com/containous/traefik/issues/5059
# default: 0.0.0.0
NETWORK_BIND_ADDR
HOMELAB_LOCAL_IP

# Sets the basic authentication to this frontend in CSV format: User:Hash,User:Hash
# https://docs.traefik.io/configuration/backends/docker/
# http://www.htaccesstools.com/htpasswd-generator/
# Please consider using OAuth configured separately
HTPASSWD

# App specific
# See official docker repos for each app to understand
# each variable parameter

# Google OAuth - https://console.developers.google.com
# In the Credentials tab, set https://oauth.${ROOT_DOMAIN}/_oauth for Authorized redirect URL
# Make sure to add ${ROOT_DOMAIN} under Authorized Domains in the OAuth Concent Screen
# Set ${ROOT_DOMAIN} in Domain Verification
OAUTH_CLIENT_ID
OAUTH_CLIENT_SECRET
# Create random secret: `openssl rand -hex 16`
OAUTH_SECRET
# set one or multiple emails to allow login
OAUTH_WHITELIST

# https://www.plex.tv/claim/ (must be used within 4 minutes)
PLEX_CLAIM_CODE
PLEX_HOSTNAME
PLEX_ALLOWED_NETWORKS

CODE_SERVER_SUDO_PASSWORD

# For container name resolution within Netdata
# `grep docker /etc/group | cut -d ':' -f 3`
DOCKER_PGID


MINIFLUX_PASSWORD
MINIFLUX_POSTGRES_PASSWORD

INFLUXDB_ADMIN_PASSWORD
INFLUXDB_USER_PASSWORD

NEXTCLOUD_ADMIN_PASSWORD

NEXTCLOUD_MYSQL_ROOT_PASSWORD
NEXTCLOUD_MYSQL_PASSWORD

DISKOVER_ES_PASSWORD

PIEHOLE_PASSWORD