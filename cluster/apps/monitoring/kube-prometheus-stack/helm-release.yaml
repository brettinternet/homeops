---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 40.0.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
          - name: email
            email_configs:
              send_resolved: false
              to: "${NOTIFY_EMAIL}"
              from: "AlertManager <${SMTP_USER}>"
              smarthost: maddy.default.svc.cluster.local:2525
              require_tls: false
        route:
          group_by: [alertname, job]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: email
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: email
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: [alertname, namespace]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        hosts:
          - &host "alert-manager.${PUBLIC_DOMAIN}"
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 1
        podAntiAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 1Gi
        resources:
          limits:
            memory: 400Mi
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints: &hosts
        - 10.1.2.10
        - 10.1.2.11
        # - 10.1.2.12
        # - 10.1.2.13
        # - 10.1.2.14
    kubeScheduler:
      enabled: true
      endpoints: *hosts
    kubeProxy:
      enabled: true
      endpoints: *hosts
    kubeEtcd:
      enabled: true
      endpoints: *hosts
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
        hosts:
          - &host "prometheus.${PUBLIC_DOMAIN}"
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      thanosIngress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: GRPC
        hosts:
          - &host "thanos-sidecar.${PUBLIC_DOMAIN}"
        tls:
          - hosts:
              - *host
      prometheusSpec:
        replicas: 3
        replicaExternalLabelName: __replica__
        externalLabels:
          cluster: home
        thanos:
          image: quay.io/thanos/thanos:v0.28.0
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.28.0"
        podAntiAffinity: hard
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 14d
        retentionSize: 10GB
        enableAdminAPI: true
        walCompression: true
        allowOverlappingBlocks: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 10Gi
        # Prometheus is memory hungry! ðŸ˜”
        resources:
          requests:
            memory: 64Mi
          limits:
            memory: 512Mi
        additionalScrapeConfigs:
          - job_name: node-exporter
            scrape_interval: 5m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - "opnsense.${PRIVATE_DOMAIN}:9100"
