---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app crowdsec
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: *app
      version: 0.7.0
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  # https://github.com/crowdsecurity/helm-charts/blob/main/charts/crowdsec/values.yaml
  values:
    container_runtime: containerd
    image:
      repository: ghcr.io/crowdsecurity/crowdsec
      tag: v1.4.6
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    lapi:
      dashboard:
        enabled: true
        image:
          repository: metabase/metabase
        assetURL: https://crowdsec-statics-assets.s3-eu-west-1.amazonaws.com/metabase_sqlite.zip
        ingress:
          enabled: true
          annotations:
            # metabase only supports http
            nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
            hajimari.io/enable: "true"
            hajimari.io/icon: shield-lock
          ingressClassName: nginx
          host: "crowdsec.${PUBLIC_DOMAIN}"
      persistentVolume:
        data:
          enabled: true
          accessModes:
            - ReadWriteMany
          storageClassName: appdata
          # existingClaim: appdata # subpath not supported
          size: 1Gi
        config:
          enabled: true
          accessModes:
            - ReadWriteMany
          storageClassName: appdata
          size: 100Mi
      metrics:
        enabled: false
        serviceMonitor:
          enabled: false
      resources:
        limits:
          memory: 100Mi
        # requests:
        #   cpu: 30m
        #   memory: 100Mi
    agent:
      env:
        - name: COLLECTIONS
          value: "crowdsecurity/nginx"
        - name: PARSERS
          value: "crowdsecurity/cri-logs"
      acquisition:
        - namespace: networking
          podName: ingress-nginx-controller-*
          program: nginx
      metrics:
        enabled: true
        serviceMonitor:
          enabled: false
      resources:
        limits:
          memory: 100Mi
        # requests:
        #   cpu: 30m
        #   memory: 100Mi
      persistentVolume:
        # -- Persistent volume for config folder. Stores local config (parsers, scenarios etc.)
        config:
          enabled: false
