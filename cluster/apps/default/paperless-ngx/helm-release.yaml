# https://github.com/paperless-ngx/paperless-ngx/blob/main/docker/compose/docker-compose.postgres-tika.yml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app paperless
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: paperless-postgres
      namespace: default
    - name: paperless-redis
      namespace: default
    - name: paperless-gotenberg
      namespace: default
    - name: paperless-tika
      namespace: default
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: latest
    # https://paperless-ngx.readthedocs.io/en/latest/configuration.html
    env:
      PAPERLESS_TIME_ZONE: "${TIMEZONE}"
      PAPERLESS_URL: "https://docs.${PUBLIC_DOMAIN}"
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_WEBSERVER_WORKERS: 2
      # https://paperless-ngx.readthedocs.io/en/latest/advanced_usage.html#advanced-file-name-handling
      PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{title}"
      # https://github.com/paperless-ngx/paperless-ngx/issues/264
      PAPERLESS_PORT: 8000
      USERMAP_UID: "${SECURITY_CONTEXT_RUN_AS_USER}"
      USERMAP_GID: "${SECURITY_CONTEXT_RUN_AS_GROUP}"
      PAPERLESS_DBHOST: paperless-postgres.default.svc.cluster.local
      PAPERLESS_DBPORT: 5432
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: paperless
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg.default.svc.cluster.local:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
      PAPERLESS_ADMIN_MAIL: "${NOTIFY_EMAIL}"
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: 8000
    persistence:
      data:
        enabled: true
        existingClaim: appdata
        subPath:
          - path: paperless/data
            mountPath: /usr/src/paperless/data
          - path: paperless/media
            mountPath: /usr/src/paperless/media
          - path: paperless/export
            mountPath: /usr/src/paperless/export
          - path: paperless/consume
            mountPath: /usr/src/paperless/consume
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: file-multiple
        hosts:
          - host: &host "docs.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podAnnotations:
      secret.reloader.stakater.com/reload: *app

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless-postgres
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: library/postgres
      tag: "14"
    env:
      - name: POSTGRES_USER
        value: paperless
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: paperless
            key: PAPERLESS_DBPASS
      - name: POSTGRES_DB
        value: paperless
      - name: PGDATA
        value: /var/lib/postgresql/data
    podSecurityContext:
      runAsUser: "${SECURITY_CONTEXT_RUN_AS_USER}"
      runAsGroup: "${SECURITY_CONTEXT_RUN_AS_GROUP}"
      fsGroup: "${SECURITY_CONTEXT_FS_GROUP}"
    service:
      main:
        ports:
          http:
            port: 5432
    persistence:
      data:
        enabled: true
        mountPath: /var/lib/postgresql/data
        existingClaim: appdata
        subPath: paperless_db
    podAnnotations:
      secret.reloader.stakater.com/reload: paperless

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless-redis
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      strategy: RollingUpdate
    image:
      repository: docker.io/library/redis
      tag: "7"
    command: ["redis-server", "--requirepass", "$(REDIS_PASSWORD)"]
    env:
      REDIS_REPLICATION_MODE: master
    envFrom:
      - secretRef:
          name: paperless
    persistence:
      data:
        enabled: true
        path: /data
        existingClaim: appdata
        subPath: paperless_redis
    service:
      main:
        ports:
          http:
            port: 6379
    podAnnotations:
      secret.reloader.stakater.com/reload: paperless

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      strategy: RollingUpdate
    image:
      # https://hub.docker.com/r/gotenberg/gotenberg
      repository: docker.io/gotenberg/gotenberg
      tag: "7"
    command: [gotenberg]
    args: [--chromium-disable-routes=true]
    service:
      main:
        ports:
          http:
            port: 3000

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless-tika
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      strategy: RollingUpdate
    image:
      repository: ghcr.io/paperless-ngx/tika
      tag: latest
    service:
      main:
        ports:
          http:
            port: 9998
